#!/usr/bin/env python3

import csv
import os
import sys
import datetime
import pandas as pd

# Import CSV fields from source
from tsg_harvest.harvest import HL_SCAN_DATE, TSG_PUBLISH_DATE, NVCL_ID

"""
Class used to read and retrieve Hylogger metadatafrom a CSV file
CSV file is generated by 'harvest.py' script in tsg_harvest directory
"""
class TSGMeta:
    def __init__(self, csv_filename: str):
        """ Converts the CSV file into a dict, first column is NVCL id, second column date
        """
        self.table = {}
        nvcl_ids = {}
        if os.path.exists(csv_filename):
            with open(csv_filename) as csvfile:
                tsg_reader = csv.DictReader(csvfile, delimiter='|')
                for row in tsg_reader:
                    nvcl_id = row[NVCL_ID]
                    scan_date = self.__str2date(row[HL_SCAN_DATE])
                    publish_date = self.__str2date(row[TSG_PUBLISH_DATE])
                    # Is this NVCL id already in the list?
                    if nvcl_id in nvcl_ids:
                        continue
                    nvcl_ids[nvcl_id] = True
                    # Assemble dict for pandas row  ( nvcl_id, scan date, publish date )
                    self.table.setdefault('nvcl_id', []).append(nvcl_id)
                    self.table.setdefault(HL_SCAN_DATE, []).append(scan_date)
                    self.table.setdefault(TSG_PUBLISH_DATE, []).append(publish_date)
        else:
            print(f"ERROR - Cannot find TSG metadata file: {csv_filename}")
            sys.exit(1)

    def __str2date(self, date_str) -> datetime.date:
        """ Converts date string to datetime.date object

        :param date_str: date string in '%Y-%m-%d %H:%M:%S' format
        :returns: datetime.date object
        """
        try:
            return datetime.datetime.strptime(date_str, '%Y-%m-%d %H:%M:%S').date()
        except ValueError:
            return None

    def get_frame(self) -> pd.DataFrame:
        """ Returns a pandas DataFrame with nvcl_id, HL_SCAN_DATE and TSG_PUBLISH_DATE  columns
        """
        return pd.DataFrame(self.table)
